{"mappings":"AAAA;AAEA,MAAM,SAAS;AACf,MAAM,SACJ;AAEF,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,MAAM,UAAU,SAAS,aAAa,CAAC;AAEvC,MAAM,gBAAgB,SAAU,IAAI;IAClC,MAAM,OAAO,KAAK,OAAO,CAAC,EAAE,CAAC,IAAI,KAAK,WAAW,eAAe;IAEhE,MAAM,OAAO,CAAC,kBAAkB,EAAE,KAAK;mBACtB,EAAE,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,QAAK;mBACpC,EAAE,KAAK,IAAI,CAAC;;;;;4BAKH,EAAE,KAAK,IAAI,CAAC,QAAQ,GAAG,IAAI;;;;;;;;wBAQ/B,EAAE,KAAK,IAAI,CAAC,KAAK,GAAG,OAAO;;;;QAI3C,CAAC;IAEP,6BAA6B;IAC7B,aAAa,OAAO,CAAC,eAAe,KAAK,SAAS,CAAC;IAEnD,QAAQ,SAAS,GAAG;AACtB;AAEA,uDAAuD;AACvD,MAAM,6BAA6B;IACjC,MAAM,aAAa,aAAa,OAAO,CAAC;IACxC,IAAI,YAAY;QACd,MAAM,OAAO,KAAK,KAAK,CAAC;QACxB,cAAc;IAChB;AACF;AAEA,MAAM,cAAc,CAAA;IAClB,QAAQ,SAAS,GAAG,CAAC,iBAAiB,EAAE,QAAQ,IAAI,CAAC;AACvD;AAEA,MAAM,aAAa,eAAgB,IAAI;IACrC,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,SAAS,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;QAE1D,IAAI,CAAC,IAAI,EAAE,EACT,MAAM,IAAI,MAAM;QAElB,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,cAAc;QAEd,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,KAAK,GAAG,CAAC,OAAO;IAC9B,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;QACd,YAAY,CAAC,UAAG,EAAE,IAAI,OAAO,CAAC,CAAC;QAE/B,MAAM;IAIR;AACF;AAEA,2DAA2D;AAC3D,SAAS,gBAAgB,CAAC,oBAAoB;AAE9C,UAAU,gBAAgB,CAAC,SAAS,SAAU,KAAK;IACjD,IAAI,MAAM,GAAG,KAAK,SAChB,WAAW,UAAU,KAAK;AAE9B;AAEA,UAAU,gBAAgB,CAAC,SAAS,IAAM,WAAW,UAAU,KAAK","sources":["weather.js"],"sourcesContent":["'use strict';\r\n\r\nconst apiKey = '9e17f258e701f74ef718d466c579818d';\r\nconst apiUrl =\r\n  'https://api.openweathermap.org/data/2.5/weather?units=metric&q=';\r\n\r\nconst searchBox = document.querySelector('.search input');\r\nconst searchBtn = document.querySelector('.search button');\r\nconst weather = document.querySelector('.weather');\r\n\r\nconst renderWeather = function (data) {\r\n  const icon = data.weather[0].main === 'Clouds' ? 'clouds.png' : 'rain.png';\r\n\r\n  const html = ` <img src=\"images/${icon}\" class=\"weather-icon\" />\r\n  <h1 class=\"temp\">${Math.round(data.main.temp) + 'Â°C'}</h1>\r\n  <h2 class=\"city\">${data.name}</h2>\r\n  <div class=\"details\">\r\n    <div class=\"col\">\r\n      <img src=\"images/humidity.png\" />\r\n      <div>\r\n        <p class=\"humidity\">${data.main.humidity + '%'}</p>\r\n        <p>Humidity</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <img src=\"images/wind.png\" />\r\n      <div>\r\n        <p class=\"wind\">${data.wind.speed + 'km/h'}</p>\r\n        <p>Wind Speed</p>\r\n      </div>\r\n    </div>\r\n  </div>`;\r\n\r\n  // Save data to local storage\r\n  localStorage.setItem('weatherData', JSON.stringify(data));\r\n\r\n  weather.innerHTML = html;\r\n};\r\n\r\n// Function to retrieve weather data from local storage\r\nconst getWeatherFromLocalStorage = () => {\r\n  const storedData = localStorage.getItem('weatherData');\r\n  if (storedData) {\r\n    const data = JSON.parse(storedData);\r\n    renderWeather(data);\r\n  }\r\n};\r\n\r\nconst renderError = message => {\r\n  weather.innerHTML = `<p class=\"error\">${message}</p>`;\r\n};\r\n\r\nconst getWeather = async function (city) {\r\n  try {\r\n    const res = await fetch(apiUrl + city + `&appid=${apiKey}`);\r\n\r\n    if (!res.ok)\r\n      throw new Error('City not found. Please enter a valid city name.');\r\n\r\n    const data = await res.json();\r\n    renderWeather(data);\r\n\r\n    console.log(data);\r\n    console.log(data.sys.country);\r\n  } catch (err) {\r\n    console.error(err);\r\n    renderError(`ðŸ’£ ${err.message}`);\r\n\r\n    throw err;\r\n\r\n    // reject promise returned from async function\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Load weather data from local storage when the page loads\r\ndocument.addEventListener('DOMContentLoaded', getWeatherFromLocalStorage);\r\n\r\nsearchBox.addEventListener('keyup', function (event) {\r\n  if (event.key === 'Enter') {\r\n    getWeather(searchBox.value);\r\n  }\r\n});\r\n\r\nsearchBtn.addEventListener('click', () => getWeather(searchBox.value));\r\n"],"names":[],"version":3,"file":"weather.dddccacb.js.map","sourceRoot":"/__parcel_source_root/"}